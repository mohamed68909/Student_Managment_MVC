// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student_Managmet_MVC.Data;

#nullable disable

namespace Student_Managmet_MVC.Migrations
{
    [DbContext(typeof(AppsContext))]
    [Migration("20250806142118_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPresent = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPresent = false,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPresent = true,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPresent = true,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPresent = false,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int?>("DapartmantId")
                        .HasColumnType("int");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DapartmantId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credits = 3,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Credits = 4,
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            Id = 3,
                            Credits = 3,
                            Name = "Databases"
                        },
                        new
                        {
                            Id = 4,
                            Credits = 3,
                            Name = "Algorithms"
                        },
                        new
                        {
                            Id = 5,
                            Credits = 4,
                            Name = "Operating Systems"
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Dapartmant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Dapartmant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Information Systems"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mathematics"
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "A",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "B",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "C",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "A",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            EnrollmentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Grade = "B+",
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DapartmantId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DapartmantId");

                    b.HasIndex("StudentId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hadeer.mohamed@example.com",
                            HireDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dr. Hadeer Mohamed"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mostafa.hassan@example.com",
                            HireDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dr. Mostafa Hassan"
                        },
                        new
                        {
                            Id = 3,
                            Email = "rania.ali@example.com",
                            HireDate = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dr. Rania Ali"
                        },
                        new
                        {
                            Id = 4,
                            Email = "tarek.hamed@example.com",
                            HireDate = new DateTime(2021, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dr. Tarek Hamed"
                        },
                        new
                        {
                            Id = 5,
                            Email = "mona.adel@example.com",
                            HireDate = new DateTime(2022, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dr. Mona Adel"
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.OfficeAssignment", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.ToTable("OfficeAssignments");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            Location = "Room A101"
                        },
                        new
                        {
                            InstructorId = 2,
                            Location = "Room B202"
                        },
                        new
                        {
                            InstructorId = 3,
                            Location = "Room C303"
                        },
                        new
                        {
                            InstructorId = 4,
                            Location = "Room D404"
                        },
                        new
                        {
                            InstructorId = 5,
                            Location = "Room E505"
                        });
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DapartmantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DapartmantId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DapartmantId = 1,
                            DataOfBirth = new DateTime(2001, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed@example.com",
                            Name = "Ahmed Ali"
                        },
                        new
                        {
                            Id = 2,
                            DapartmantId = 2,
                            DataOfBirth = new DateTime(2002, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara@example.com",
                            Name = "Sara Mostafa"
                        },
                        new
                        {
                            Id = 3,
                            DapartmantId = 3,
                            DataOfBirth = new DateTime(2000, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohamed@example.com",
                            Name = "Mohamed Tarek"
                        },
                        new
                        {
                            Id = 4,
                            DapartmantId = 4,
                            DataOfBirth = new DateTime(2001, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nour@example.com",
                            Name = "Nour Ali"
                        },
                        new
                        {
                            Id = 5,
                            DapartmantId = 5,
                            DataOfBirth = new DateTime(1999, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "youssef@example.com",
                            Name = "Youssef Hany"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_Managmet_MVC.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Attendance", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Course", "Course")
                        .WithMany("Attendances")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_Managmet_MVC.Models.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Course", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Dapartmant", null)
                        .WithMany("Courses")
                        .HasForeignKey("DapartmantId");

                    b.HasOne("Student_Managmet_MVC.Models.Instructor", null)
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Enrollment", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_Managmet_MVC.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Instructor", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Dapartmant", null)
                        .WithMany("Instructors")
                        .HasForeignKey("DapartmantId");

                    b.HasOne("Student_Managmet_MVC.Models.Student", null)
                        .WithMany("Instructors")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.OfficeAssignment", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Instructor", "Instructor")
                        .WithOne("OfficeAssignment")
                        .HasForeignKey("Student_Managmet_MVC.Models.OfficeAssignment", "InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Student", b =>
                {
                    b.HasOne("Student_Managmet_MVC.Models.Dapartmant", "Dapartmant")
                        .WithMany("Students")
                        .HasForeignKey("DapartmantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dapartmant");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Course", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Dapartmant", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Instructor", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("OfficeAssignment");
                });

            modelBuilder.Entity("Student_Managmet_MVC.Models.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Instructors");
                });
#pragma warning restore 612, 618
        }
    }
}
